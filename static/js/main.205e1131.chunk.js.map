{"version":3,"sources":["components/Result/Result.js","components/Form/Form.js","App.js","serviceWorker.js","index.js","components/Form/Form.module.css"],"names":["Result","bmiAnalysis","bmi","document","body","style","backgroundImage","this","props","bmiResult","React","Component","Form","state","weight","height","feet","inches","disabled","handleWeight","event","setState","target","value","handleHeight","heightCalc","toFeet","calcBMI","a","async","squaredHeight","imperialFormula","console","log","toFixed","n","Math","floor","className","classes","bmiContainer","formGroup","title","subtitle","type","min","max","id","onChange","defaultBtn","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.205e1131.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Result extends React.Component {\r\n    bmiAnalysis = (bmi) => {\r\n        if (bmi >= 30) {\r\n            document.body.style.backgroundImage = 'linear-gradient( 107.2deg,  rgba(150,15,15,1) 10.6%, rgba(247,0,0,1) 91.1% )';\r\n            return 'Obese';\r\n        }\r\n        else if (bmi >= 25) {\r\n            document.body.style.backgroundImage = 'radial-gradient( circle farthest-corner at 10% 20%,  rgba(205,33,42,1) 0%, rgba(236,95,5,1) 90% )';\r\n            return 'Overweight';\r\n        }\r\n        else if ((bmi < 25) && (bmi > 18.5)) {\r\n            document.body.style.backgroundImage = 'linear-gradient( 109.6deg,  rgba(98,210,141,0.88) 11.2%, rgba(234,245,45,0.79) 88% )';\r\n            return 'Healthy';\r\n        }\r\n        else {\r\n            document.body.style.backgroundImage = 'radial-gradient( circle farthest-corner at 10% 20%,  rgba(205,33,42,1) 0%, rgba(236,95,5,1) 90% )';\r\n            return 'Underweight';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.bmiAnalysis(this.props.bmiResult)}\r\n                <p>Score: {this.props.bmi}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport Result from '../Result/Result';\r\nimport classes from './Form.module.css';\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        weight: 150,\r\n        height: 68,\r\n        feet: 5,\r\n        inches: 8,\r\n        bmi: 0,\r\n        disabled: true\r\n    }\r\n\r\n    toFeet(n) {\r\n        let feet = n / 12;\r\n        let feetCalc = Math.floor(feet.toFixed(1));\r\n        let inchesCalc = n % 12;\r\n        return [feetCalc, inchesCalc];\r\n    }\r\n\r\n    handleWeight = (event) => {\r\n        this.setState({ disabled: false })\r\n        this.setState({ weight: event.target.value });\r\n    }\r\n\r\n    handleHeight = (event) => {\r\n        this.setState({ disabled: false })\r\n        this.setState({ height: event.target.value })\r\n        let heightCalc = this.toFeet(event.target.value);\r\n        this.setState({ feet: heightCalc[0], inches: heightCalc[1] })\r\n    }\r\n\r\n    calcBMI = async () => {\r\n        let squaredHeight = this.state.height * this.state.height;\r\n        let imperialFormula = 703 * (this.state.weight / squaredHeight);\r\n        console.log(this.state.bmi);\r\n        await this.setState({ bmi: imperialFormula.toFixed(1) });\r\n        console.log(this.state.bmi);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.bmiContainer}>\r\n                <div className={classes.formGroup}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h1>{this.props.title}</h1>\r\n                            <h2>{this.state.bmi !== 0 ? (<Result bmi={this.state.bmi} bmiResult={this.state.bmi} />) : this.props.subtitle}</h2>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <div className=\"weight\">\r\n                                <input type=\"range\" min=\"2\" max=\"211\" className=\"value_range\" id=\"weightRange\" onChange={this.handleWeight} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"label-weight field-text\">\r\n                                {this.state.weight}<small>lbs</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-9\">\r\n                            <div className=\"height\">\r\n                                <input type=\"range\" min=\"2\" max=\"107\" className=\"value_range\" id=\"heightRange\" onChange={this.handleHeight} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                            <div className=\"label-height field-text\">\r\n                                {this.state.feet}<small>ft</small>{this.state.inches}<small>in</small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button disabled={this.state.disabled} type=\"submit\" className={classes.defaultBtn} onClick={this.calcBMI}>GO!</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from './components/Form/Form';\n\nclass App extends React.Component {\n    state = {\n        title: 'Imperial BMI Calculator',\n        subtitle: 'Please enter your weight and height'\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Form title={this.state.title} subtitle={this.state.subtitle} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bmiContainer\":\"Form_bmiContainer__1geNA\",\"formGroup\":\"Form_formGroup__Lw0Xw\",\"weight\":\"Form_weight__3woZK\",\"height\":\"Form_height__3u2HU\",\"defaultBtn\":\"Form_defaultBtn__nsLd4\"};"],"sourceRoot":""}